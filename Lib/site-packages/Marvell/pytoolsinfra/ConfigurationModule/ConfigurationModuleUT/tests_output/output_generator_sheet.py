class TGConnectionTableEntry(object):
    def __init__(self):
        self.id = ""
        self.tg_ip = ""
        self.tg_type = ""
        self.tg_card = ""
        self.tg_port = ""
        self.dut_port = ""


class TGConnectionTable(object):
    def __init__(self):
        self.entries = [TGConnectionTableEntry]
        self.entries.pop()

    def __getitem__(self, item):
        return self.entries[item]

    def __iter__(self):
        for entry in self.entries:
            yield entry


class Table2Entry(object):
    def __init__(self):
        self.col1 = ""
        self.col2 = ""
        self.col3 = ""
        self.col3 = ""
        self.col4 = ""


class Table2(object):
    def __init__(self):
        self.entries = [Table2Entry]
        self.entries.pop()

    def __getitem__(self, item):
        return self.entries[item]

    def __iter__(self):
        for entry in self.entries:
            yield entry


class Table3Entry(object):
    def __init__(self):
        self.col1 = ""
        self.col2 = ""
        self.col3 = ""


class Table3(object):
    def __init__(self):
        self.entries = [Table3Entry]
        self.entries.pop()

    def __getitem__(self, item):
        return self.entries[item]

    def __iter__(self):
        for entry in self.entries:
            yield entry


class TGConnectionTableSheet(object):
    def __init__(self):
        self.tg_connection_table = TGConnectionTable()
        self.table2 = Table2()
        self.table3 = Table3()


