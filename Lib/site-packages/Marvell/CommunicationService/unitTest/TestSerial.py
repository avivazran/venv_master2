from __future__ import print_function
from builtins import str
from builtins import range
from ..HighCommunicationLayer.CommunicationManagement import *

from ..HighCommunicationLayer.CommunicationManagement import \
    CommunicationManagement as cm


def initialize(connAlias, runAppDemo, initSys):
    # CommunicationManagement.SetShellPrompt(connAlias, "/ #")
    # print CommunicationManagement.GetBufferTillPrompt(connAlias, 10)
    # CommunicationManagement.SetShellPrompt(connAlias, "\n->")
    # print CommunicationManagement.SendCommandAndGetBufferTillPrompt(connAlias, str(runAppDemo) + "\n", 10)
    cm.SetShellPrompt(connAlias, "\nConsole#")
    cm.SendTerminalString(connAlias, "\r", 10)
    print (cm.GetBuffer(connAlias, 20))
    print (cm.SendCommandAndGetBufferTillPrompt(connAlias, "luaCLI\r", 10))
    print (cm.SendCommandAndGetBufferTillPrompt(connAlias, str(initSys) + "\r", 10))


def test_send_get_loop():
    conn = cm.Connect(CommunicationType.PySerial, 6)
    # initialize(conn, "appDemo -tty", "cpssInitSystem 29,1")
    cm.SetShellPrompt(conn, "Console#")

    for i in range(1, 100):
        print ('................................itt #{}................................'.format(i))
        print (cm.SendCommandAndGetBufferTillPrompt(conn, "show interfaces status all\r"))
        # cm.SendTerminalString(conn,"show interfaces status all\r", False)
        # buffer = cm.GetBufferTillPrompt(conn, 20)
        print (buffer)


def main():
    test_send_get_loop()


if __name__ == "__main__":
    main()
