from __future__ import print_function

from builtins import object
import os
import sys
import re
import json

from Common.Types import *
from HighCommunicationLayer.CommunicationManagement import *

class Executer(object):

    @staticmethod
    def is_json_valid(myjson):
        try:
            json_object = json.loads(myjson)
        except ValueError as e:
            return False
        return True

    @staticmethod
    def execute(alias, serializer):
        request = 'execGenWrapper'
        CommunicationManagement.SendTerminalString(alias, request, False)
        print(request)
        request = serializer.Serialize()
        response = CommunicationManagement.SendCommandAndGetBufferTillPrompt(alias, request, 10)
        print(response)
        result = response[response.find('execGenWrapper') + len('execGenWrapper'):response.rfind('Console#')]
        return serializer.Deserialize(result.strip())