from __future__ import print_function
from builtins import object
import serial.tools.list_ports
import platform
if platform.system() == 'Windows':
    from ..Common.list_ports_winreg import *
# === Communication Utilities Layer ===

"""
This is an abstract layer ,
that provides usable functionality for serial/telnet , beside Communication Algo Layer's.

"""

class CommunicatioUtilities(object):

    @staticmethod
    # def GetSerialPortsList():
    #     """
    #     This function can be executed to get a list of ports
    #     :return: sorted list of available ports
    #     """
    #     ports_list = [str(port.device) for port in serial.tools.list_ports.comports()]
    #     ports_list.sort()
    #
    #     return ports_list


    def GetSerialPortsList():
        """
        This function can be executed to get a list of ports
        :return: sorted list of available ports
        """
        ports_list = []
        if platform.system() == 'Windows':
            for port, desc, hwid in sorted(comports()):
                print("%s: %s [%s]" % (port, desc, hwid))
                if "Bluetooth" not in desc:
                    ports_list.append(port)
        else:
            ports_list = [str(port.device) for port in serial.tools.list_ports.comports()]
            print(ports_list)
            ports_list.sort()

        return ports_list

    @staticmethod
    def is_linux():
        return 'linux' in platform.platform().lower()
