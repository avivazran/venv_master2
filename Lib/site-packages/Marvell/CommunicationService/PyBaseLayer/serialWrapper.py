from serial import *


class serialWrapper(Serial):

    def __init__(self, *args, **kwargs):
        super(serialWrapper, self).__init__(*args, **kwargs)
        self.delayBetweenCharsWrite = -1

    # @property
    # def timeout(self):
    #     """Get the current timeout setting."""
    #     return self._timeout

    @Serial.timeout.setter
    def timeout(self, timeout):
        """Change timeout setting."""
        if timeout is not None:
            try:
                timeout + 1     # test if it's a number, will throw a TypeError if not...
            except TypeError:
                raise ValueError("Not a valid timeout: {!r}".format(timeout))
            if timeout < 0:
                raise ValueError("Not a valid timeout: {!r}".format(timeout))

            if self._timeout != timeout:
                self._timeout = timeout
                if self.is_open:
                    self._reconfigure_port()
