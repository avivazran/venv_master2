#-------------------------------------------------------------------------------
# Copyright (c) (2023) Marvell. All rights reserved
#
# The following file is subject to the limited use license agreement
# by and between Marvell and you, your employer or other entity on
# behalf of whom you act. In the absence of such license agreement the
# following file is subject to Marvell's standard Limited Use License Agreement.
#-------------------------------------------------------------------------------

from enum import IntEnum
from typing import Any, List, Optional, Union

from pydantic import BaseModel

class ifcs_time_t(BaseModel):
    tv_sec: int
    tv_usec: int
    tv_nsec: int

class ifcs_flt_list_t(BaseModel):
    flt_list: List[float]

class ifcs_stats_class_t(IntEnum):
    IFCS_STATS_CLASS_REGULAR = 0
    IFCS_STATS_CLASS_DROP = 1
    IFCS_STATS_CLASS_ERROR = 2


class ifcs_stats_direction_t(IntEnum):
    IFCS_STATS_DIRECTION_NONE = 0
    IFCS_STATS_DIRECTION_RX = 1
    IFCS_STATS_DIRECTION_TX = 2


class ifcs_counter_t(BaseModel):
    counter: int
    stats_class: ifcs_stats_class_t
    stats_direction: ifcs_stats_direction_t
    timestamp: ifcs_time_t
    valid: bool


class ifcs_cr_match_type_t(IntEnum):
    IFCS_CR_MATCH_TYPE_IP_PROTO = 0
    IFCS_CR_MATCH_TYPE_IP_PROTO_L4_SRC_PORT = 1
    IFCS_CR_MATCH_TYPE_IP_PROTO_L4_DEST_PORT = 2
    IFCS_CR_MATCH_TYPE_IP_PROTO_L4_SRC_DEST_PORT = 3


class ifcs_cr_match_t(BaseModel):
    type: ifcs_cr_match_type_t
    ip_proto: int
    src_port: int
    dest_port: int


class ifcs_stats_mode_t(IntEnum):
    IFCS_STATS_MODE_PKT_BYTE_WIDE = 0
    IFCS_STATS_MODE_PKT_BYTE_EXTRA_WIDE = 1
    IFCS_STATS_MODE_PKT_ONLY_WIDE = 2
    IFCS_STATS_MODE_PKT_ONLY_EXTRA_WIDE = 3
    IFCS_STATS_MODE_MAX = 4


class ifcs_flex_stats_attributes_t(BaseModel):
    counter_mode: ifcs_stats_mode_t
    start_offset: int
    number_of_counters: int


class ifcs_ptp_policy_t(BaseModel):
    ptp_instance_handle: int
    ptp_enable: bool

class ifcs_attr_t(BaseModel):
    id: int
    value: Union[
        bool,
        int,
        float,
        str,
        List[int],
        List[float],
        ifcs_flt_list_t,
        ifcs_counter_t,
        List[ifcs_cr_match_t],
        ifcs_flex_stats_attributes_t,
        ifcs_ptp_policy_t,
    ]

    class Config:
       smart_union = True
